--------------------START DELETE CODE----------------------------------------------------------
javascript:void(null);
<span class="t-Icon fa fa-trash delete-note dr" aria-hidden="true" style="color:red"></span>
data-id="&GROUPID."
-----------------
let group_id = $(this.triggeringElement).parent().data('id');

apex.message.confirm('Are you sure, you want to delete this record?', function (isOk) {
    if (isOk) {
        apex.server.process(
            'DeleteDBRole',
            {
                x01: $v("P3_GROUPID"),
                x02: group_id 
            },
            {
                dataType: 'text',
                success: function(data)  {
                    var obj = JSON.parse(data);
                
                    if(obj.status == "success"){
                    
                    apex.message.showPageSuccess(obj.message);
                     setTimeout(function() {
                    $('#t_Alert_Success').fadeOut('fast');
                    }, 2000);
                    apex.region('db_role').refresh();
                    }
                    else
                    apex.message.alert(obj.message);
                }
            }
        );
    }
})
--------------------PLSQL-----------
DECLARE
V_GROUP_ID           VARCHAR2(200)    := APEX_APPLICATION.G_X01;
V_DB_ROLE_NAME_ID    VARCHAR2(200)    := APEX_APPLICATION.G_X02;

BEGIN

DELETE FROM SECURITY.GROUP_DB_ROLES WHERE GROUP_ID = V_GROUP_ID AND DB_ROLE_NAME = V_DB_ROLE_NAME_ID; 

apex_json.open_object;
  apex_json.write( p_name => 'status', p_value => 'success');
  apex_json.write( p_name => 'message', p_value => 'Record Deleted successfully.');
apex_json.close_object;
EXCEPTION
WHEN OTHERS THEN
 apex_json.open_object;
  apex_json.write( p_name => 'status', p_value => 'failed');
  apex_json.write( p_name => 'message', p_value => 'Unable to Delete Record');
  apex_json.close_object;

END;
--------------------------------END DELETE CODE-------------------------------------------------------------
--------------------------------START UPDATE CODE-----------------------------------------------------------
javascript:void(null);
<span class="t-Icon fa fa-edit edit-irrow ur" aria-hidden="true"></span>
onclick="updateRow(this, '&REPORT_TYPE_ID.', '&REPORT_TYPE_DESC.', '&PAGE_HEIGHT.', '&BOTTOM_MARGIN.', '&ORDER_BY.', '&ACTIVE.')"
-----------------------Page level code
function updateRow(p_this, p_reportID,p_reportDesc,p_hight, p_bottom, p_order, p_active) {

if(p_orientation == 'Landscape'){
    p_orientation  = 'L';
    apex.item( "P18_ORIENTATION_1" ).setValue (p_orientation);
}
else{
   p_orientation  = 'P'; 
   apex.item( "P18_ORIENTATION_1" ).setValue (p_orientation);
}
  apex.item( "P18_REPORT_TYPE_ID_1" ).setValue (p_reportID);
  apex.item( "P18_REPORT_TYPE_DESC_1" ).setValue (p_reportDesc);
  apex.item( "P18_PAGE_HEIGHT_1" ).setValue (p_hight);
  apex.item( "P18_PAGE_WIDTH_1" ).setValue (p_bottom);
  apex.item( "P18_PAGE_WIDTH_1" ).setValue (p_order);
  apex.item( "P18_PAGE_WIDTH_1" ).setValue (p_active);

  apex.theme.openRegion('editreport_Dialog');
}
---------------------------------------------javascript code ajax FOR SAVE/UPDATE
    apex.server.process("ReportUpdateProcess", 
{   
    x01: $v("P18_REPORT_TYPE_ID_1"),
    x02: $v("P18_REPORT_TYPE_DESC_1"),
    x03: $v("P18_PAGE_HEIGHT_1"),
    x04: $v("P18_PAGE_WIDTH_1"),
    x05: $v("P18_ORIENTATION_1"),
    x06: $v("P18_LEFT_MARGIN_1"),

 },

 { 
   dataType: 'text',
    success: function(data)  {

          var obj = JSON.parse(data);
      
        if(obj.status == "success"){
        
        apex.message.showPageSuccess(obj.message);
         setTimeout(function() {
         $('#t_Alert_Success').fadeOut('fast');
         }, 2000);
         
        apex.item( "P18_REPORT_TYPE_ID_1" ).setValue ('');
        apex.item( "P18_REPORT_TYPE_DESC_1" ).setValue ('');
        apex.item( "P18_PAGE_HEIGHT_1" ).setValue ('');
        apex.item( "P18_PAGE_WIDTH_1" ).setValue ('');
        apex.item( "P18_ORIENTATION_1" ).setValue ('');
        apex.item( "P18_LEFT_MARGIN_1" ).setValue ('');
       
        apex.theme.closeRegion("editreport_Dialog");
        apex.region('report_types').refresh();
        
      }
      else{
          apex.message.alert(obj.message);
          }
    }
});
---------------------------------------------PLSQL CODE FOR SAVE/UPDATE
DECLARE
  V_REPORT_ID              VARCHAR2(90)                   :=APEX_APPLICATION.g_x01;
  V_REPORT_DESC            varchar2(200)                  :=APEX_APPLICATION.g_x02;
  V_HIGHT                  varchar2(200)                  :=APEX_APPLICATION.g_x03;
  V_WIDTH                  varchar2(200)                  :=APEX_APPLICATION.g_x04;
  V_ORIENTATION            varchar2(200)                  :=APEX_APPLICATION.g_x05;
  V_LEFT                   varchar2(200)                  :=APEX_APPLICATION.g_x06;
  V_TOP                    varchar2(200)                  :=APEX_APPLICATION.g_x07;

BEGIN

        
     BEGIN
     IF V_REPORT_DESC IS NOT NULL AND V_HIGHT IS NOT NULL AND V_WIDTH IS NOT NULL AND V_ORDER_BY IS NOT NULL THEN

      UPDATE DEFINITIONS.REPORT_TYPES
         SET REPORT_TYPE_ID = V_REPORT_ID,
          REPORT_TYPE_DESC = V_REPORT_DESC, 
          PAGE_HEIGHT = V_HIGHT, 
          PAGE_WIDTH = V_WIDTH, 
          ORIENTATION = V_ORIENTATION, 
          LEFT_MARGIN = V_LEFT, 
          TOP_MARGIN = V_TOP, 
          RIGHT_MARGIN = V_RIGHT, 
          BOTTOM_MARGIN = V_BOTTOM, 
          ORDER_BY = V_ORDER_BY, 
          ACTIVE = V_ACTVIE
         WHERE REPORT_TYPE_ID = V_REPORT_ID;
       
        apex_json.open_object;
        apex_json.write( p_name => 'status', p_value => 'success');
        apex_json.write( p_name => 'message', p_value => 'Record Saved Successfully.');
        apex_json.close_object;
        ELSE
        apex_json.open_object;
        apex_json.write( p_name => 'status', p_value => 'failed');
        apex_json.write( p_name => 'message', p_value => 'Please Fill the Require Fields.');
        apex_json.close_object;
        END IF;
        END;
      EXCEPTION
      WHEN OTHERS THEN
        apex_json.open_object;
        apex_json.write( p_name => 'status', p_value => 'failed');
        apex_json.write( p_name => 'message', p_value => 'Please Try with different Report Desc');
        apex_json.close_object;
END;
---------------------------------------END CODE -----------------------------
--------------------------Ajax call with Array of more than 20 items-----------------------------------------------

   apex.server.process("UserSaveProcess", 
{ 
      pageItems: ["P33_USERID",
                  "P33_USERNAME",
                  "P33_FULL_NAME",
                  "P33_OLD_PASSWORD",
                  "P33_PASSWORD",
                  "P33_CONFIRM_PASSWORD",
                  "P33_USER_TYPE",
                  "P33_DISPLAY_ASSIGNMENT",
                  "P33_ALERT_EXPIRY_DAYS",
                  "P33_MAX_SESSION_LIMIT",
                  "P33_USER_CODE",
                  "P33_OBJ_LIST_SOURCE",

                  "P33_MRNO",
                  "P33_LOGIN_LOGGING_ON",
                  "P33_NO_OF_WRONG_TRIES",
                  "P33_MIN_PASSWORD_LENGTH",
                  "P33_CHECK_ALREADY_LOGIN",

                  "P33_PASSWORD_EXPIRE",
                  "P33_ACTIVE",
                  "P33_IS_MAIL",
                  "P33_TEXT_SPECIALITY",
                  "P33_APPLICATION_LOGGING_ON",
                  "P33_GROUP",
                  "P33_PSWD_EXPIRY_DAYS",
                  "P33_MAX_PASSWORD_LENGTH",
                  "P33_COMPLEX_PASSWORD",
                  "P33_CHECK_PSWRD_HISTORY",
                  "P33_NEW_PASSWORD_FLAG",
                  "P33_LIMITED_EMR_ACCESS"
                 ]
 },

 { 
   dataType: 'text',
    success: function(data)  {

          var obj = JSON.parse(data);
      
        if(obj.status == "success"){
        
        apex.message.showPageSuccess(obj.message);
         setTimeout(function() {
         $('#t_Alert_Success').fadeOut('fast');
         }, 2000);
         apex.region('del_group').refresh();
      }
      else{
          apex.message.alert(obj.message);
          }
    }
});
-----------------PLSQL--------------------
DECLARE
V_USERNAME VARCHAR2(100);        
V_GROUP_ID VARCHAR2(100);        
V_VALIDPASSWORD VARCHAR2(55); --BOOLEAN;
V_EXCEPTION                EXCEPTION;
V_ALERT                    VARCHAR2(1000);
V_PASSWORD                 VARCHAR2(255);
V_ALERT_TEXT               VARCHAR2(4000);
V_STOP                     CHAR(1);
BEGIN
    IF :P33_USERID IS NOT NULL AND :P33_USERNAME IS NOT NULL AND :P33_MRNO IS NOT NULL THEN

      IF :P33_CONFIRM_PASSWORD IS NOT NULL THEN
         BEGIN
            IF  :P33_PASSWORD = :P33_CONFIRM_PASSWORD
            THEN
            NULL;
            ELSE 
            V_ALERT := 'Password And confirm password not match!';
            RAISE V_EXCEPTION;
            END IF;

            END;
      END IF;

         IF nvl(:P33_MAX_PASSWORD_LENGTH,0)-nvl(:P33_MIN_PASSWORD_LENGTH,0)<0 THEN
            V_ALERT := :P33_MIN_PASSWORD_LENGTH||'Minumum password length must be less than maximum password length.'||:P33_MAX_PASSWORD_LENGTH;
            RAISE V_EXCEPTION;
        END IF;
        -- IF :P33_MIN_PASSWORD_LENGTH >= :P33_MAX_PASSWORD_LENGTH THEN
        --     V_ALERT := 'Maximum password length must be greator than minimum password length.';
        --     RAISE V_EXCEPTION;
        -- END IF;

         IF :P33_PSWD_EXPIRY_DAYS > 0 AND :P33_ALERT_EXPIRY_DAYS = 0 THEN
            V_ALERT := 'Minimum one alert expiry day should be enter.';
            RAISE V_EXCEPTION;
        END IF;
            /***********************************************************************/
                IF NVL(:P33_ALERT_EXPIRY_DAYS, 0) < 0 THEN
                V_ALERT := 'Kindly enter valid alert expiry days.';
                RAISE V_EXCEPTION;
            END IF;
            
            IF NVL(:P33_PSWD_EXPIRY_DAYS, 0) < 0 THEN
                V_ALERT := 'Kindly enter valid expire password days.';
                RAISE V_EXCEPTION;
            END IF;
            
            IF NVL(:P33_ALERT_EXPIRY_DAYS, 0) > 0 AND
                NVL(:P33_PSWD_EXPIRY_DAYS, 0) = 0 THEN
                V_ALERT := 'Kindly enter valid expire password days.';
                RAISE V_EXCEPTION;
            END IF;
            IF NVL(:P33_ALERT_EXPIRY_DAYS, 0) = 0 AND  NVL(:P33_PSWD_EXPIRY_DAYS, 0) > 0 THEN
                V_ALERT := 'Alert expiry days must be greater than 0.';
                RAISE V_EXCEPTION;
            END IF;
            IF NVL(:P33_ALERT_EXPIRY_DAYS, 0) > NVL(:P33_PSWD_EXPIRY_DAYS, 0) THEN
                V_ALERT := 'Expire password days must be greater than alert expiry days.';
                RAISE V_EXCEPTION;
            END IF;
            IF NVL(:P33_NO_OF_WRONG_TRIES,0) < 0 THEN
                V_ALERT := 'Kindly enter valid no. of wrong tries.';
            RAISE V_EXCEPTION;
            END IF;
            /***********************************************************************/

             BEGIN
          -- CALL THE PROCEDURE
             SECURITY.PKG_ISMS.P_CHK_PASSWORD(P_USER_MRNO     => :P33_MRNO,
                                     P_USER_PASSWORD => :P33_PASSWORD,
                                     P_ALERT_TEXT    => V_ALERT_TEXT,
                                     P_STOP          => V_STOP);
                                    END;
                                    IF NVL(V_STOP, 'N') = 'Y' THEN
                                        V_ALERT := V_ALERT_TEXT;
                                        RAISE V_EXCEPTION;
                                    END IF;
  /************************************************************************/

           
                -- his.message_entry_category(:P15_USERID || :P15_MRNO, 'tsajid');
                    UPDATE SECURITY.USERS
                    SET USERID = :P33_USERID,
                    MRNO = :P33_MRNO,
                    USERNAME = :P33_USERNAME,
                    FULL_NAME = :P33_FULL_NAME,
                    PASSWORD = :P33_PASSWORD,
                    USER_TYPE = :P33_USER_TYPE,
                    DISPLAY_ASSIGNMENT = :P33_DISPLAY_ASSIGNMENT,
                    LOGIN_LOGGING_ON = :P33_LOGIN_LOGGING_ON,
                    ALERT_EXPIRY_DAYS = :P33_ALERT_EXPIRY_DAYS,
                    NO_OF_WRONG_TRIES = :P33_NO_OF_WRONG_TRIES,
                    MAX_SESSION_LIMIT = :P33_MAX_SESSION_LIMIT,
                    MIN_PASSWORD_LENGTH = :P33_MIN_PASSWORD_LENGTH,
                    CHECK_ALREADY_LOGIN = :P33_CHECK_ALREADY_LOGIN,
                    USER_CODE = :P33_USER_CODE,
                    OBJ_LIST_SOURCE = :P33_OBJ_LIST_SOURCE,
                    
                    PASSWORD_EXPIRE = :P33_PASSWORD_EXPIRE,
                    ACTIVE = :P33_ACTIVE,
                    IS_MAIL = :P33_IS_MAIL,
                    TEXT_SPECIALITY = :P33_TEXT_SPECIALITY,
                    APPLICATION_LOGGING_ON = :P33_APPLICATION_LOGGING_ON,
                    PSWD_EXPIRY_DAYS = :P33_PSWD_EXPIRY_DAYS,
                    MAX_PASSWORD_LENGTH = :P33_MAX_PASSWORD_LENGTH,
                    COMPLEX_PASSWORD = :P33_COMPLEX_PASSWORD,
                    CHECK_PSWRD_HISTORY = :P33_CHECK_PSWRD_HISTORY,
                    NEW_PASSWORD_FLAG = :P33_NEW_PASSWORD_FLAG,
                    LIMITED_EMR_ACCESS = :P33_LIMITED_EMR_ACCESS
                    WHERE USERID = :P33_PARAM_ID;
                    
                     
                     IF :P33_USERID IS NOT NULL THEN
                     IF :P33_GROUP IS NULL THEN
                      V_ALERT := 'Kindly Select Group.';
                      RAISE V_EXCEPTION;
                     END IF;
                      SELECT count(*) 
                        INTO V_GROUP_ID
                        FROM SECURITY.MEMBER 
                        WHERE UPPER(GROUPID) = LTRIM(RTRIM(UPPER(:P33_GROUP))) AND UPPER(USERID) = LTRIM(RTRIM(UPPER(:P33_USERID)));
                       IF V_GROUP_ID > 0 THEN 
                       NULL;
                       ELSE
                        INSERT INTO SECURITY.MEMBER (USERID, GROUPID)
                        VALUES(:P33_USERID, :P33_GROUP);
                        END IF;
                     END IF;
                    apex_json.open_object;
                    apex_json.write( p_name => 'status', p_value => 'success');
                    apex_json.write( p_name => 'message', p_value => 'Record Saved Successfully.');
                    apex_json.close_object;

                    ELSE
                        apex_json.open_object;
                        apex_json.write( p_name => 'status', p_value => 'failed');
                        apex_json.write( p_name => 'message', p_value => 'Please Fill the Required Fields.');
                        apex_json.close_object;
                    END IF;
                --     END;
                EXCEPTION
                WHEN OTHERS THEN
                    apex_json.open_object;
                    apex_json.write( p_name => 'status', p_value => 'failed');
                    apex_json.write( p_name => 'message', p_value => V_ALERT ||' '||SQLERRM);
                    apex_json.close_object;
            END;
